{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Login/Login.tsx"],"names":["module","exports","form_control","error","errorSummary","Input","_ref2","input","_ref2$meta","meta","touched","props","Object","D_It_incubator_Go_INCUBATOR_3_try_SamuraiTS_Samurai_Way_03_08_2023_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","concat","s","assign","TextArea","_ref","_ref$meta","__webpack_require__","d","__webpack_exports__","requiredField","requiredFieldLength","value","len","length","r","LoginForm","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","_common_FormsControls_FormsControls__WEBPACK_IMPORTED_MODULE_3__","_utils_validators_validators__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_5__","_redux_auth_reducer__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_8__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_8___default","Fragment","onSubmit","handleSubmit","validate","component","name","placeholder","type","captchaUrl","alt","src","style","LoginReduxForm","reduxForm","form","Login","useSelector","state","auth","isAuth","dispatch","useDispatch","to","formData","login","email","password","rememberMe","captcha"],"mappings":"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","file":"static/js/6.8be924f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__1PJLV\",\"error\":\"FormsControls_error__1qovh\",\"errorSummary\":\"FormsControls_errorSummary__3_U_U\"};","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const TextArea: React.FC<any> = ({input, meta: {touched, error}, ...props}) => {\r\n    let hasError = touched && error\r\n    return (\r\n        <div className={`${s.form_control} ${hasError ? s.error : ''}`}>\r\n            <div>\r\n                <textarea {...input}{...props}/></div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\nexport const Input: React.FC<any> = ({input, meta: {touched, error}, ...props}) => {\r\n    let hasError = touched && error\r\n    return (\r\n        <div className={`${s.form_control} ${hasError ? s.error : ''}`}>\r\n            <div><input {...input}{...props}/></div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextArea;","export const requiredField = (value: string) => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const requiredFieldLength = (len: number) => (value: string) => {\r\n    if (value && value.length > len) return `Max ${len}`\r\n    return undefined\r\n}","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"./../../utils/validators/validators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, loginOwnProps> & loginOwnProps> = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field\r\n                validate={[requiredField]}\r\n                component={Input} name={\"email\"} placeholder={\"Login\"}/></div>\r\n            <div><Field\r\n                validate={[requiredField]}\r\n                component={Input} name={\"password\"} placeholder={\"Password\"} type={\"password\"}/></div>\r\n            <div><Field\r\n                type=\"checkbox\" name={\"rememberMe\"} component={Input} placeholder={\"checkbox\"}/>\r\n            </div>\r\n            {props.captchaUrl && <div><img alt={'captchaUrl'} src={props.captchaUrl}/>\r\n                <div><Field\r\n                    validate={[requiredField]}\r\n                    component={Input} name={\"captcha\"} placeholder={\"captcha\"}/>\r\n                </div>\r\n            </div>}\r\n\r\n            {props.error && <div className={style.errorSummary}>{props.error}</div>}\r\n            <button>Login</button>\r\n        </form>\r\n    </>\r\n}\r\nconst LoginReduxForm = reduxForm<FormDataType, loginOwnProps>({form: 'login'})(LoginForm)\r\ntype FormDataType = {\r\n    captcha: string | null\r\n    rememberMe: boolean\r\n    password: string\r\n    email: string\r\n}\r\ntype loginOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\ntype formDataType = {\r\n    email: string, password: string, rememberMe: boolean, captcha: any\r\n}\r\nconst Login: React.FC = (props) => {\r\n    const captchaUrl = useSelector<AppStateType, string | null>(state => state.auth.captchaUrl)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n    const dispatch = useDispatch();\r\n    const onSubmit = (formData: formDataType) => {\r\n        //@ts-ignore\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n    if (isAuth) return <Redirect to={'/profile'}/>\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}