{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","form_control","error","errorSummary","Input","_ref2","input","_ref2$meta","meta","touched","props","Object","D_It_incubator_Go_INCUBATOR_3_try_Samurai_Way_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","concat","s","assign","TextArea","_ref","requiredField","value","requiredFieldLength","len","length","_templateObject","dialogs","dialogsItems","active","messages","message","DialogItem","path","id","react_default","dialog","NavLink","to","name","Message","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","isAuth","AddMessageFormRedux","onSubmit","sendMessage","textarea","Redirect","letVal","reduxForm","form","Fragment","handleSubmit","Field","component","placeholder","validate","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","React"],"mappings":"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","file":"static/js/5.5848a94e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__1ZaF6\",\"error\":\"FormsControls_error__1d0gd\",\"errorSummary\":\"FormsControls_errorSummary__2NLNY\"};","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={`${s.form_control} ${hasError ? s.error : ''}`}>\r\n            <div><textarea {...input}{...props}/></div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    let hasError = touched && error\r\n    return (\r\n        <div className={`${s.form_control} ${hasError ? s.error : ''}`}>\r\n            <div><input {...input}{...props}/></div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextArea;","export const requiredField = value =>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const requiredFieldLength =(len)=> value =>{\r\n    if(value && value.length > len) return \"Max \"  `${len}`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2z-5n\",\"dialogsItems\":\"Dialogs_dialogsItems__fbmVj\",\"active\":\"Dialogs_active__17ZlA\",\"messages\":\"Dialogs_messages__3OaSa\",\"message\":\"Dialogs_message__1wDEg\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form\";\r\nimport TextArea from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField, requiredFieldLength} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.textarea)\r\n    }\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\nconst letVal = requiredFieldLength(30)\r\nconst AddMessageForm = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={\"textarea\"}\r\n                    component={TextArea}\r\n                    placeholder='Enter your message'\r\n                    validate={[requiredField, letVal]}\r\n                >\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    </>\r\n}\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessage'\r\n})(AddMessageForm)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (value) => {\r\n            dispatch(sendMessageCreator(value));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}