{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","form_control","error","errorSummary","Input","_ref2","input","_ref2$meta","meta","touched","props","Object","D_It_incubator_Go_INCUBATOR_3_try_Samurai_Way_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","concat","s","assign","TextArea","_ref","requiredField","value","requiredFieldLength","len","length","_templateObject","descriptionBlock","mainPhoto","postsBlock","posts","item","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","isOwner","savePhoto","Preloader","src","photos","large","userPhoto","type","target","files","ProfileInfo_ProfileStatusWithHooks","Post","message","likesCount","MyPosts","React","memo","postsElements","map","p","MyPosts_Post_Post","key","id","AddPostReduxForm","onSubmit","addPost","letVal","reduxForm","form","Fragment","handleSubmit","Field","placeholder","name","component","validate","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.dbee933f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__1ZaF6\",\"error\":\"FormsControls_error__1d0gd\",\"errorSummary\":\"FormsControls_errorSummary__2NLNY\"};","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={`${s.form_control} ${hasError ? s.error : ''}`}>\r\n            <div><textarea {...input}{...props}/></div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    let hasError = touched && error\r\n    return (\r\n        <div className={`${s.form_control} ${hasError ? s.error : ''}`}>\r\n            <div><input {...input}{...props}/></div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextArea;","export const requiredField = value =>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const requiredFieldLength =(len)=> value =>{\r\n    if(value && value.length > len) return \"Max \"  `${len}`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__qncx_\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2a68s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__lxI3v\",\"posts\":\"MyPosts_posts__148K6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__30KoW\"};","import React, {useState,useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode,setEditMode] = useState(false)\r\n    const [status,setStatus] = useState(props.status)\r\n    const activateEditMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n    //85\r\n    //86 virtual Dom\r\n    return (\r\n        <div>\r\n            {!editMode&&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from './../../../assets/images/user.png'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                <div>{isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {requiredField, requiredFieldLength} from \"../../../utils/validators/validators\";\r\nimport TextArea from \"../../common/FormsControls/FormsControls\";\r\n//88 pureComponent\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n    let onSubmit = (value) => {\r\n        props.addPost(value.addPost);\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;\r\nconst letVal = requiredFieldLength(30)\r\nexport const AddPostForm = (props) => {\r\n    return (\r\n        <>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"post Message\"}\r\n                        name={\"addPost\"}\r\n                        component={TextArea}\r\n                        validate={[requiredField, letVal]}\r\n                    >\r\n                    </Field>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n        </>)\r\n}\r\nexport const AddPostReduxForm = reduxForm({\r\n    form: 'postForm'\r\n})(AddPostForm)\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (value) => {\r\n            dispatch(addPostActionCreator(value));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n            />\r\n\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                isOwner={!this.props.match.params.userId}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}