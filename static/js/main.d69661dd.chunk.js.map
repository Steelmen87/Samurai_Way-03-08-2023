{"version":3,"sources":["components/common/Pagination/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.ts","assets/images/user.png","redux/dialogs-reducer.ts","api/chat-api.ts","redux/chat-reducer.ts","assets/images/preloader.svg","components/Users/users.module.css","api/api.ts","serviceWorker.js","redux/app-reducer.ts","hoc/withSuspense.js","components/common/Pagination/Pagination.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","utils/object-helper.ts","redux/users-reducer.ts","components/Users/Users.tsx","components/Users/PageUsers.tsx","components/Header/Header.tsx","App.tsx","redux/sidebar-reducer.ts","redux/redux-store.ts","index.js","api/users-api.ts","api/profile-api.ts","components/Navbar/Navbar.module.css","components/common/Preloader/Preloader.tsx","api/auth-api.ts","api/captcha-api.ts","redux/auth-reducer.ts"],"names":["module","exports","selectedPage","paginator","pageNumber","loginBlock","initialState","posts","id","message","likesCount","profile","status","addPostActionCreator","value","type","setStatus","getUserProfile","userId","_ref","Object","D_It_incubator_Go_INCUBATOR_3_try_SamuraiTS_Samurai_Way_03_08_2023_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_It_incubator_Go_INCUBATOR_3_try_SamuraiTS_Samurai_Way_03_08_2023_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","data","wrap","_context","prev","next","usersAPI","getProfile","sent","stop","_x","apply","this","arguments","getStatus","_ref2","_callee2","_context2","profileAPI","_x2","updateStatus","_ref3","_callee3","_context3","resultCode","t0","_x3","savePhoto","file","_ref4","_callee4","response","_context4","photos","_x4","saveProfile","_ref5","_callee5","getState","_context5","auth","stopSubmit","_error","messages","abrupt","Promise","reject","_x5","_x6","profileReducer","state","length","undefined","action","newPost","D_It_incubator_Go_INCUBATOR_3_try_SamuraiTS_Samurai_Way_03_08_2023_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","concat","D_It_incubator_Go_INCUBATOR_3_try_SamuraiTS_Samurai_Way_03_08_2023_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","filter","post","__webpack_require__","p","dialogs","name","sendMessageCreator","dialogsReducer","D_It_incubator_Go_INCUBATOR_3_try_SamuraiTS_Samurai_Way_03_08_2023_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","D_It_incubator_Go_INCUBATOR_3_try_SamuraiTS_Samurai_Way_03_08_2023_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","ws","subscribers","messages-received","status-changed","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","clearUp","removeEventListener","messageHandler","errorHandler","openHandler","forEach","s","close","WebSocket","addEventListener","console","error","e","parse","JSON","chatApi","event","callback","push","send","_newMessageHandler","newMessageHandlerCreator","payload","messagesReceived","_StatusChangedHandler","newStatusHandlerCreator","startMessagesListening","asyncToGenerator","regenerator_default","stopMessagesListening","sendMessage","chatReducer","objectSpread","toConsumableArray","map","m","v1","index","array","userPhoto","d","__webpack_exports__","instance","ResultCodesEnum","axios__WEBPACK_IMPORTED_MODULE_0__","n","axios","create","withCredentials","baseURL","headers","API-KEY","Boolean","window","location","hostname","match","initialized","globalError","appReducer","withSuspense","Component","props","react_default","createElement","Suspense","fallback","Preloader","Pagination","totalItemsCount","pageSize","_ref$currentPage","currentPage","_ref$onPageChanged","onPageChanged","x","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","cn","styles","onClick","defineProperty","key","User","user","followingInProgress","unfollow","follow","react_router_dom","to","src","small","alt","followed","disabled","some","UserFormikForm","React","memo","useSelector","usersPage","formik_esm","enableReinitialize","initialValues","term","friend","String","onSubmit","values","actions","onFilterChanged","handleSubmit","onChange","handleChange","onBlur","handleBlur","as","errors","updateObjectInArray","items","itemId","objPropName","newObjectProps","u","users","totalUsersCount","isFetching","followSuccess","unfollowSuccess","setCurrentPage","setFilter","toggleIsFetching","toggleFollowingProgress","requestUsers","getUsers","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","usersReducer","Users","useDispatch","unfollowH","bind","_x8","followH","_x7","history","useHistory","actualPage","actualFilter","useEffect","parsed","queryString","search","substr","page","Number","query","pathname","common_Pagination_Pagination","Users_User","PageUsers","Fragment","components_Users_Users","HeaderCom","isAuth","login","header","avatar","style","backgroundColor","icon","UserOutlined","color","es_button","logOut","marginLeft","Content","Layout","Footer","Sider","Header","DialogsContainer","lazy","all","then","ProfileContainer","ChatPage","LoginPage","App","catchAllUnhandledErrors","alert","initializeApp","layout","App_Header","row","col","span","menu","theme","mode","defaultSelectedKeys","Item","activeClassName","activeLink","padding","breadcrumb","margin","width","defaultOpenKeys","height","SubMenu","title","LaptopOutlined","minHeight","react_router","exact","path","render","PageUsers_PageUsers","textAlign","MainApp","compose","withRouter","connect","app","getAuthUserData","sidebarReducer","rootReducers","combineReducers","chat","profilePage","dialogsPage","sidebar","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","_api__WEBPACK_IMPORTED_MODULE_0__","_profile_api__WEBPACK_IMPORTED_MODULE_1__","get","res","delete","warn","put","photoFile","formData","FormData","append","Content-Type","nav","item","active","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","authAPI","email","password","rememberMe","captcha","securityAPI","captchaUrl","setAuthUserData","_response$data$data","_login","Success","CaptchaIsRequired","getCaptchaUrlTC","url"],"mappings":"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","file":"static/js/main.d69661dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__bNWOd\",\"paginator\":\"Paginator_paginator__2Z-du\",\"pageNumber\":\"Paginator_pageNumber__1W8-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Header_loginBlock__1BvCt\"};","import {FormAction, FormErrors, stopSubmit} from \"redux-form\";\r\nimport {photosType, postType, profileType} from \"../types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {usersAPI} from \"../api/users-api\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ] as Array<postType>,\r\n    profile: null as profileType | null,\r\n    status: \"\",\r\n};\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: actionType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.value,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case 'DELETE-POST': {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.id)\r\n            }\r\n        }\r\n        case 'SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case 'SAVE_PHOTO_SUCCESS':\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photos\r\n                } as profileType\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const deletePost = (id: number) => ({type: 'DELETE-POST', id} as const)\r\nexport const addPostActionCreator = (value: string) => ({type: 'ADD-POST', value} as const)\r\nexport const setUserProfile = (profile: profileType) => ({type: 'SET_USER_PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'SET_STATUS', status} as const)\r\nexport const savePhotoSuccess = (photos: photosType) => ({type: 'SAVE_PHOTO_SUCCESS', photos} as const)\r\n\r\ntype stopSubmitType = (form: string, errors?: FormErrors<any, any>) => FormAction\r\n\r\ntype DispatchThunkType = ThunkAction<Promise<void>, AppStateType, unknown, actionType>\r\n\r\nexport const getUserProfile = (userId: number): DispatchThunkType =>\r\n    async (dispatch) => {\r\n        let data = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(data));\r\n    }\r\n\r\nexport const getStatus = (userId: number): DispatchThunkType =>\r\n    async (dispatch) => {\r\n        let data = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(data));\r\n    }\r\n\r\nexport const updateStatus = (status: string): DispatchThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            let data = await profileAPI.updateStatus(status)\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        } catch (e) {\r\n            //обработка ошибки\r\n        }\r\n    }\r\nexport const savePhoto = (file: any): DispatchThunkType =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    }\r\nexport const saveProfile = (profile: profileType): DispatchThunkType => async (dispatch, getState: any) => {\r\n    let data = await profileAPI.saveProfile(profile)\r\n    const userId = getState().auth.userId;\r\n    if (data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        //@ts-ignore\r\n        dispatch(stopSubmit(\"profile-data\", {_error: data.messages[0]}))\r\n        return Promise.reject({_error: data.messages[0]})\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type deletePostType = ReturnType<typeof deletePost>\r\nexport type addPostActionCreatorType = ReturnType<typeof addPostActionCreator>\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nexport type setStatusType = ReturnType<typeof setStatus>\r\nexport type savePhotoSuccessType = ReturnType<typeof savePhotoSuccess>\r\nexport type actionType =\r\n    deletePostType\r\n    | addPostActionCreatorType\r\n    | setUserProfileType\r\n    | setStatusType\r\n    | savePhotoSuccessType","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessagesType = {\r\n    id: Number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessagesType>\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/SEND_MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: action.value}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (value: string) => ({type: 'SN/SEND_MESSAGE', value} as const)\r\n\r\nexport default dialogsReducer;\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionType = ReturnType<typeof sendMessageCreator>","let subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscribesType[],\r\n    'status-changed': [] as StatusChangedSubscribesType[]\r\n}\r\n\r\n\r\nlet ws: WebSocket | null;\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst clearUp = () => {\r\n    ws && ws.removeEventListener('close', closeHandler)\r\n    ws && ws.removeEventListener('message', messageHandler)\r\n    ws && ws.removeEventListener('error', errorHandler)\r\n    ws && ws.removeEventListener('open', openHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: statusType) => {\r\n    subscribers[\"status-changed\"].forEach((s) => s(status));\r\n}\r\n\r\nfunction createChannel() {\r\n    clearUp()\r\n    ws && ws.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n    notifySubscribersAboutStatus('pending')\r\n    ws && ws.addEventListener('close', closeHandler)\r\n    ws && ws.addEventListener('message', messageHandler)\r\n    ws && ws.addEventListener('open', openHandler)\r\n    ws && ws.addEventListener('error', errorHandler)\r\n}\r\n\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus(\"error\")\r\n    console.error(\"Refresh Page\")\r\n};\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus(\"ready\")\r\n};\r\nconst messageHandler = (e: MessageEvent) => {\r\n    let parse = JSON.parse(e.data);\r\n    subscribers['messages-received'].forEach(s => s(parse))\r\n};\r\n\r\nexport const chatApi = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        ws && ws.close()\r\n        clearUp();\r\n        subscribers[\"messages-received\"] = []\r\n        subscribers[\"status-changed\"] = []\r\n    },\r\n    subscribe(event: EventsNames, callback: MessagesReceivedSubscribesType | StatusChangedSubscribesType) {\r\n        //@ts-ignore\r\n        subscribers[event].push(callback)\r\n        return () => {\r\n            //@ts-ignore\r\n            subscribers[event] = subscribers[event].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(event: EventsNames, callback: MessagesReceivedSubscribesType | StatusChangedSubscribesType) {\r\n        //@ts-ignore\r\n        subscribers[event] = subscribers[event].filter(s => s !== callback)\r\n    },\r\n    sendMessages(message: string) {\r\n        ws && ws.send(message)\r\n    }\r\n\r\n}\r\n\r\ntype MessagesReceivedSubscribesType = (messages: ChatMessageIpType[]) => void\r\ntype StatusChangedSubscribesType = (status: statusType) => void\r\nexport type statusType = 'pending' | 'ready' | 'error';\r\nexport type EventsNames = 'messages-received' | 'status-changed'\r\nexport type ChatMessageIpType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {chatApi, ChatMessageIpType, statusType} from \"../api/chat-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport type chatMessageType = ChatMessageIpType & { id: string };\r\n\r\nlet initialState = {\r\n    messages: [] as chatMessageType[],\r\n    status: 'pending' as statusType\r\n};\r\nexport type initialStateType = typeof initialState\r\nconst chatReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/CHAT/MESSAGE_RECEIVED':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.map((m) => ({...m, id: v1()}))]\r\n                    .filter((m, index, array) => index >= array.length - 100)\r\n            }\r\n        case 'SN/CHAT/SET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const messagesReceived = (messages: ChatMessageIpType[]) => ({\r\n    type: 'SN/CHAT/MESSAGE_RECEIVED',\r\n    payload: messages\r\n} as const)\r\nexport const setStatus = (status: statusType) => ({\r\n    type: 'SN/CHAT/SET_STATUS',\r\n    payload: status\r\n} as const)\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageIpType[]) => void) | null = null;\r\nlet newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(messagesReceived(messages))\r\n        };\r\n    }\r\n    return _newMessageHandler\r\n}\r\nlet _StatusChangedHandler: ((status: statusType) => void) | null = null;\r\nlet newStatusHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_StatusChangedHandler === null) {\r\n        _StatusChangedHandler = (status) => {\r\n            dispatch(setStatus(status))\r\n        };\r\n    }\r\n    return _StatusChangedHandler\r\n}\r\nexport const startMessagesListening = (): ThunkActionType => async (dispatch) => {\r\n    chatApi.start()\r\n    chatApi.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatApi.subscribe(\"status-changed\", newStatusHandlerCreator(dispatch))\r\n}\r\nexport const stopMessagesListening = (): ThunkActionType => async (dispatch) => {\r\n    chatApi.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatApi.unsubscribe(\"status-changed\", newStatusHandlerCreator(dispatch))\r\n    chatApi.stop()\r\n}\r\nexport const sendMessage = (message: string): ThunkActionType => async (dispatch) => {\r\n    chatApi.sendMessages(message)\r\n}\r\n\r\n\r\nexport default chatReducer;\r\n\r\ntype ThunkActionType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\ntype ActionType = messagesReceivedActionType | setStatusActionType\r\n\r\nexport type messagesReceivedActionType = ReturnType<typeof messagesReceived>\r\nexport type setStatusActionType = ReturnType<typeof setStatus>","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2F06R\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"4e5aee81-42dd-43de-87fa-a601a9c1e88b\"\r\n    }\r\n});\r\n\r\n/*\r\ntype GetProfileType = {\r\n    aboutMe: null | string\r\n    contacts: {\r\n        facebook: null | string\r\n        website: null | string\r\n        vk: null | string\r\n        twitter: null | string\r\n        instagram: null | string\r\n        youtube: null | string\r\n        github: null | string\r\n        mainLink: null | string\r\n    },\r\n    lookingForAJob: true,\r\n    lookingForAJobDescription: null | string\r\n    fullName: null | string\r\n    userId: number,\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    }\r\n}*/\r\n\r\nexport type ResponseType<D = {}> = {\r\n    data: D\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    resultCode: number\r\n}\r\n\r\nexport type UserType = {\r\n    name: null | string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    },\r\n    status: null | string\r\n    followed: boolean\r\n}\r\nexport type GetUsersType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: null | string\r\n}\r\n\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\nexport type initialStateType = typeof initialState\r\nconst appReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/SET_INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: 'SN/APP/SET_INITIALIZED',} as const)\r\n\r\nexport const initializeApp = (): ThunkActionType => async (dispatch) => {\r\n    dispatch(getAuthUserData())\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;\r\n\r\ntype ThunkActionType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\ntype ActionType = initializedSuccessActionType\r\nexport type initializedSuccessActionType = ReturnType<typeof initializedSuccess>","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n}","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Pagination: React.FC<PropsType> = ({\r\n                                           totalItemsCount, pageSize,\r\n                                           currentPage = 1,\r\n                                           onPageChanged = x => x,\r\n                                           portionSize = 10\r\n                                       }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged && onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = (props) => {\r\n    const {user, followingInProgress, unfollow, follow} = props;\r\n    return <div>\r\n\r\n        <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto} alt={'img'}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n        <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n    </div>\r\n}\r\nexport default User;\r\n\r\n\r\n","import {Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport {Field} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype validateType = {\r\n    term: string\r\n}\r\n/*const validate = (values: validateType) => {\r\n    const errors = {};\r\n    if (!values.term) {\r\n        //@ts-ignore\r\n        errors.term = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.term)) {\r\n        //@ts-ignore\r\n        errors.term = 'Invalid email address';\r\n    }\r\n\r\n    //...\r\n\r\n    return errors;\r\n};*/\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\ntype FriendFormType = \"null\" | \"true\" | \"false\"\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\nexport const UserFormikForm: React.FC<PropsType> = React.memo((props) => {\r\n    const filter = useSelector<AppStateType, FilterType>(state => state.usersPage.filter)\r\n    const submit = (values: FormType, actions: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === \"null\" ? null : !!values.friend\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n    }\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            // validate={validate}\r\n            onSubmit={submit}\r\n        >\r\n            {props => (\r\n                <Form onSubmit={props.handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        value={props.values.term}\r\n                        name=\"term\"\r\n                    />\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">all</option>\r\n                        <option value=\"true\">only followed</option>\r\n                        <option value=\"false\">only unfollowed</option>\r\n                    </Field>\r\n                    {props.errors.term && <div id=\"feedback\">{props.errors.term}</div>}\r\n                    <button type=\"submit\">Submit</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})\r\n\r\n//13","export const updateObjectInArray = (items:any, itemId:any, objPropName:any, newObjectProps:any) => {\r\n    return items.map((u:any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {updateObjectInArray} from \"../utils/object-helper\";\r\nimport {UserType} from \"../types/types\";\r\nimport {Dispatch} from \"react\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {usersAPI} from \"../api/users-api\";\r\nimport {ResponseType} from './../api/api'\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,\r\n    filter: {term: '', friend: null as null | boolean}\r\n};\r\nexport type initialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\nconst usersReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case 'SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        case \"SET_FILTER\": {\r\n            return {\r\n                ...state,\r\n                filter: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId: number) => ({type: 'FOLLOW', userId} as const)\r\nexport const unfollowSuccess = (userId: number) => ({type: 'UNFOLLOW', userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: 'SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setFilter = (filter:FilterType) => ({\r\n    type: 'SET_FILTER',\r\n    payload: filter\r\n} as const)\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: 'SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userId\r\n} as const)\r\n\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number, filter:FilterType): ThunkType =>\r\n    async (dispatch, getState) => {\r\n        dispatch(toggleIsFetching(true));\r\n        const data = await usersAPI.getUsers(currentPage, pageSize, filter.term,filter.friend)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setFilter(filter));\r\n        dispatch(setCurrentPage(currentPage));\r\n        //@ts-ignore\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionType>, userId: number, apiMethod: (userId: number) => Promise<ResponseType>, actionCreator: (userId: number) => followSuccessType | unfollowSuccessType) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId: number) =>\r\n    async (dispatch: any) => {\r\n//@ts-ignore\r\n        let apiMethod = usersAPI.follow.bind(usersAPI)\r\n        let actionCreator = followSuccess;\r\n\r\n        await followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\nexport const unfollow = (userId: number) => async (dispatch: any) => {\r\n    //@ts-ignore\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport type followSuccessType = ReturnType<typeof followSuccess>\r\nexport type unfollowSuccessType = ReturnType<typeof unfollowSuccess>\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport type toggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport type toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport type setFilterType = ReturnType<typeof setFilter>\r\n\r\ntype ActionType =\r\n    setFilterType\r\n    | followSuccessType\r\n    | unfollowSuccessType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setTotalUsersCountType\r\n    | toggleIsFetchingType\r\n    | toggleFollowingProgressType","import React, {useEffect} from 'react';\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from './User'\r\nimport {UserType} from \"../../types/types\";\r\nimport {UserFormikForm} from \"./UsersSearchForm\";\r\nimport {FilterType, requestUsers, unfollow, follow} from \"../../redux/users-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as queryString from \"querystring\";\r\n\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\ntype PropsType = {}\r\nlet Users: React.FC<PropsType> = (props) => {\r\n\r\n    const followingInProgress = useSelector<AppStateType, Array<number>>(state => state.usersPage.followingInProgress)\r\n    const users = useSelector<AppStateType, Array<UserType>>(state => state.usersPage.users)\r\n    const totalUsersCount = useSelector<AppStateType, number>(state => state.usersPage.totalUsersCount)\r\n    const currentPage = useSelector<AppStateType, number>(state => state.usersPage.currentPage)\r\n    const pageSize = useSelector<AppStateType, number>(state => state.usersPage.pageSize)\r\n    const filter = useSelector<AppStateType, FilterType>(state => state.usersPage.filter)\r\n\r\n    const dispatch = useDispatch()\r\n    const onPageChanged = (pageNumber: number) => {\r\n        history.push({\r\n            pathname: '/users',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${pageNumber}`\r\n        })\r\n        //@ts-ignore\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        history.push({\r\n            pathname: '/users',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${actualFilter}`\r\n        })\r\n        //@ts-ignore\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n    const unfollowH = (userId: number) => {\r\n        //@ts-ignore\r\n        dispatch(unfollow(userId))\r\n    }\r\n    const followH = (userId: number) => {\r\n        //@ts-ignore\r\n        dispatch(follow(userId))\r\n    }\r\n    const history = useHistory();\r\n\r\n    let actualPage = currentPage\r\n    let actualFilter = filter\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1))\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n        if (!!parsed.friend) actualFilter = {\r\n            ...actualFilter,\r\n            friend: parsed.friend === 'null' ? null : parsed.friend === 'true'\r\n        }\r\n        //@ts-ignore\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n    return <div>\r\n        <div>\r\n            <UserFormikForm onFilterChanged={onFilterChanged}/>\r\n        </div>\r\n        <Pagination\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n        />\r\n        {\r\n            users.map(u => <User key={u.id}\r\n                                 user={u}\r\n                                 followingInProgress={followingInProgress}\r\n                                 unfollow={unfollowH}\r\n                                 follow={followH}/>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {useSelector} from \"react-redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Users from \"./Users\";\r\nimport React from \"react\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nexport const PageUsers = () => {\r\n    const isFetching = useSelector<AppStateType, boolean>(state => state.usersPage.isFetching)\r\n    return <>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users/>\r\n    </>\r\n}","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {logOut} from \"../../redux/auth-reducer\";\r\nimport {Avatar, Button} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nconst HeaderCom: React.FC = () => {\r\n    const isAuth = useSelector<AppStateType,boolean>(state => state.auth.isAuth)\r\n    const login = useSelector<AppStateType,string | null>(state => state.auth.login)\r\n    const dispatch = useDispatch();\r\n    const HeaderLogout = () =>{\r\n        //@ts-ignore\r\n        dispatch(logOut())\r\n    }\r\n    return <header className={s.header}>\r\n        <Avatar style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n        <div className={s.loginBlock}>\r\n            {isAuth ?\r\n                <div style={{color:'white'}}>{login}  <Button onClick={HeaderLogout} style={{marginLeft:'20px'}}>Log Out</Button></div>\r\n                : <Button style={{marginLeft:'20px'}}><NavLink to={'/login'}>Login</NavLink></Button>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default HeaderCom;","import React from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css'\r\nimport {NavLink, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {AppStateType} from './redux/redux-store'\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {PageUsers} from \"./components/Users/PageUsers\";\r\nimport {LaptopOutlined, UserOutlined} from '@ant-design/icons';\r\n\r\nimport {Breadcrumb, Col, Layout, Menu, Row} from 'antd';\r\nimport s from \"./components/Navbar/Navbar.module.css\";\r\nimport HeaderCom from \"./components/Header/Header\";\r\n\r\nconst {Content, Footer, Sider, Header} = Layout;\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst ChatPage = React.lazy(() => import('./pages/Chat/ChatPage'));\r\n\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n//100 done\r\n\r\n\r\ntype DispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\nclass App extends React.Component<MapPropsType & DispatchPropsType, any> {\r\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        alert(\"some Error\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        //@ts-ignore\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //@ts-ignore\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <Layout>\r\n                <Header className=\"header\">\r\n                    <div className=\"logo\"/>\r\n                    <Row>\r\n                        <Col span={16}>\r\n                            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n                                <Menu.Item key={'1'}>\r\n                                    <NavLink to=\"/profile\"\r\n                                             activeClassName={s.activeLink}>Developer\r\n                                    </NavLink>\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <HeaderCom/>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\r\n                        <Sider className=\"site-layout-background\" width={200}>\r\n                            <Menu\r\n                                mode=\"inline\"\r\n                                defaultSelectedKeys={['1']}\r\n                                defaultOpenKeys={['sub1']}\r\n                                style={{height: '100%'}}\r\n                            ><Menu.SubMenu key={'sub1'} icon={<UserOutlined/>} title={\"My profile\"}>\r\n                                <Menu.Item key={'1'}>\r\n                                    <NavLink to=\"/profile\"\r\n                                             activeClassName={s.activeLink}>Developer\r\n                                    </NavLink>\r\n                                </Menu.Item>\r\n                                <Menu.Item key={'2'}>\r\n                                    <NavLink to=\"/dialogs\"\r\n                                             activeClassName={s.activeLink}>Message\r\n                                    </NavLink>\r\n                                </Menu.Item>\r\n                                <Menu.Item key={'3'}>\r\n                                    <NavLink to=\"#\"\r\n                                             activeClassName={s.activeLink}>item\r\n                                    </NavLink>\r\n                                </Menu.Item>\r\n                            </Menu.SubMenu>\r\n                                <Menu.SubMenu key={'sub2'} icon={<LaptopOutlined/>} title={\"Developers\"}>\r\n                                    <Menu.Item key={'1'}>\r\n                                        <NavLink to=\"/users\"\r\n                                                 activeClassName={s.activeLink}>users\r\n                                        </NavLink>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key={'4'}>\r\n                                        <NavLink to=\"/chat\"\r\n                                                 activeClassName={s.activeLink}>Chat\r\n                                        </NavLink>\r\n                                    </Menu.Item>\r\n                                </Menu.SubMenu>\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\r\n                            <Switch>\r\n                                <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                                <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                                <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                                <Route path='/users' render={() => <PageUsers/>}/>\r\n                                <Route path='/login' render={withSuspense(LoginPage)}/>\r\n                                <Route path='/chat' render={withSuspense(ChatPage)}/>\r\n                                <Route path='*' render={() => <div>Page 404</div>}/>\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>Samurai Social Network ©2022</Footer>\r\n            </Layout>\r\n            /*<div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/users' render={() => <PageUsers/>}/>\r\n                        <Route path='/login' render={withSuspense(LoginPage)}/>\r\n                        <Route path='*' render={() => <div>Page 404</div>}/>\r\n\r\n                    </Switch>\r\n                </div>\r\n            </div>*/\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\nconst MainApp = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nexport default MainApp;","let initialState = {};\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n    return {...state};\r\n}\r\n\r\nexport default sidebarReducer;\r\ntype InitialStateType = typeof initialState","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport chatReducer from \"./chat-reducer\";\r\n\r\nlet rootReducers = combineReducers({\r\n    chat:chatReducer,\r\n    app: appReducer,\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\nexport type AppStateType = ReturnType<typeof rootReducers>\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport store from './redux/redux-store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <MainApp/>\r\n        </HashRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {GetUsersType, instance} from \"./api\";\r\nimport {profileAPI} from \"./profile-api\";\r\nimport {ResponseType} from './api';\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<GetUsersType>\r\n        (`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<ResponseType>(`follow/${userId}`).then(res => res.data)/*.then(res => res.data)*/\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data)/*.then(res => res.data) as Promise<ResponseType>*/\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n","import {photosType, profileType} from \"../types/types\";\r\nimport {instance, ResponseType} from \"./api\";\r\nimport {ResponseAuthType} from \"./auth-api\";\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<profileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseAuthType>(`profile/status`, {status: status}).then(res => res.data);\r\n    },\r\n    saveProfile(profile: profileType) {\r\n        return instance.put<ResponseType>(`profile`, profile).then(res => res.data);\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instance.put<ResponseType<{ photos: photosType }>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__36vn7\",\"item\":\"Navbar_item__IioEf\",\"activeLink\":\"Navbar_activeLink__3Fruk\",\"active\":\"Navbar_active__1SIW6\"};","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader: React.FC = () => {\r\n    return <div style={{backgroundColor: 'white'}}>\r\n        <img alt={'img'} src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {instance, ResultCodesEnum} from \"./api\";\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<ResponseAuthType<dataAuthType>>(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: null | string = null) {\r\n        return instance.post<ResponseAuthType<{ userId: number }>>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\nexport type dataAuthType = {\r\n    id: number,\r\n    email: string\r\n    login: string\r\n}\r\nexport type ResponseAuthType<D = {}> = {\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n    data: D\r\n}","import {instance} from \"./api\";\r\n\r\nexport type ResponseCaptchaType = {\r\n    url: string\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<ResponseCaptchaType>(`security/get-captcha-url`).then(res => res.data)\r\n    }\r\n}","import {stopSubmit} from \"redux-form\";\r\nimport {ResultCodesEnum} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {securityAPI} from \"../api/captcha-api\";\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n};\r\nexport type initialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'auth/SET_USER_DATA':\r\n        case 'auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n    ({\r\n        type: 'auth/SET_USER_DATA',\r\n        payload: {userId, email, login, isAuth}\r\n    } as const)\r\nexport const getCaptchaUrlAC = (captchaUrl: string) =>\r\n    ({\r\n        type: 'auth/GET_CAPTCHA_URL_SUCCESS',\r\n        payload: {captchaUrl}\r\n    } as const)\r\n\r\nexport const getAuthUserData = (): ThunkDispatchType => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha:\r\n    string): ThunkDispatchType => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === ResultCodesEnum.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrlTC());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        //@ts-ignore\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\nexport const getCaptchaUrlTC = (): ThunkDispatchType =>\r\n    async (dispatch) => {\r\n        const data = await securityAPI.getCaptchaUrl();\r\n        dispatch(getCaptchaUrlAC(data.url))\r\n    }\r\nexport const logOut = (): ThunkDispatchType =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n\r\nexport default authReducer;\r\n\r\n\r\ntype ActionType = ReturnType<typeof setAuthUserData> | ReturnType<typeof getCaptchaUrlAC>\r\ntype ThunkDispatchType<R = Promise<void>> = ThunkAction<R, AppStateType, unknown, ActionType>\r\n"],"sourceRoot":""}